Parameters:
  env:
    Type: String
    Description: Environment
Resources:
  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: false
      AliasAttributes:
      - preferred_username
      MfaConfiguration: 'OFF'
      Policies:
        PasswordPolicy:
          MinimumLength: 6
          RequireLowercase: false
          RequireNumbers: false
          RequireSymbols: false
          RequireUppercase: false
          TemporaryPasswordValidityDays: 3
      UserPoolAddOns:
        AdvancedSecurityMode: 'OFF'
      UserPoolName:
        Fn::Sub: HN_jobs_user_pool_${env}
      LambdaConfig:
        PreSignUp:
          Fn::GetAtt:
          - AutoConfirm
          - Arn
  UserClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      AllowedOAuthFlows:
      - implicit
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthScopes:
      - phone
      - email
      - openid
      - aws.cognito.signin.user.admin
      - profile
      ClientName:
        Fn::Sub: HN_jobs_app_client_${env}
      ExplicitAuthFlows:
      - USER_PASSWORD_AUTH
      CallbackURLs:
      - https://github.com/RahulHP
      GenerateSecret: false
      RefreshTokenValidity: 30
      SupportedIdentityProviders:
      - COGNITO
      UserPoolId:
        Ref: UserPool
  CognitoUserPoolID:
    Type: AWS::SSM::Parameter
    Properties:
      Description: Cognito User Pool Client ID
      Name:
        Fn::Sub: /${env}/cognito/userpoolid
      Type: String
      Value:
        Ref: UserClient
  AutoConfirmIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Description: IAM Role to allow Lambdas to use SSM
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      RoleName:
        Fn::Sub: AutoConfirm_Role_${env}
  AutoConfirm:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: hn-jobs-rahulhp-dev
        S3Key: 8b17367bb0abd64efa83b49afb83ec14
      Handler: autoconfirm.lambda_handler
      Role:
        Fn::GetAtt:
        - AutoConfirmIAMRole
        - Arn
      Runtime: python3.6
      Description: Auto-Confirming Users
      Timeout: 30
  AutoConfirmPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
        - AutoConfirm
        - Arn
      Principal: cognito-idp.amazonaws.com
      SourceArn:
        Fn::GetAtt:
        - UserPool
        - Arn
